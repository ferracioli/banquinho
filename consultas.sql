/* 
    Contabilista os gastos de cada mochileiro por meio de dois selects aninhados em um terceiro:
    O primeiro select contabiliza os gastos das atividades nas quais os turistas participaram
    O segundo select contabiliza o custo inicial para a participação de cada itinerário
    O select exterior soma estes valores em uma tabela única
 */
SELECT M.MOCHILEIRO, SUM(M.GASTOS_ATIVIDADES_TOTAIS) AS GASTOS_TOTAIS, M.ORGANIZADOR, M.CODIGO_INTERNO
    FROM ((
        SELECT P.MOCHILEIRO, (SUM(G.GASTOS_GANHOS)) AS GASTOS_ATIVIDADES_TOTAIS, C.ORGANIZADOR, C.CODIGO_INTERNO 
        FROM PARTICIPA P JOIN CARAVANA C
        ON (P.ORGANIZADOR = C.ORGANIZADOR AND P.CODIGO_INTERNO = C.CODIGO_INTERNO) JOIN ITINERARIO I
        ON (C.ORGANIZADOR = I.ORGANIZADOR AND C.CODIGO_INTERNO = I.CODIGO_INTERNO) JOIN ADENTRA AD
        ON (I.ID = AD.ITINERARIO) JOIN ATIVIDADE A
        ON (AD.ITINERARIO = A.ITINERARIO) JOIN GRUPO_DE_PARTICIPANTES G
        ON (A.ID = G.ATIVIDADE) JOIN ENTRA E
        ON (G.ATIVIDADE = E.ATIVIDADE AND G.CATEGORIA = E.CATEGORIA AND P.MOCHILEIRO = E.USUARIO AND E.USUARIO = AD.USUARIO)
        GROUP BY P.MOCHILEIRO, C.ORGANIZADOR, C.CODIGO_INTERNO
    )
    UNION ALL (
        SELECT P.MOCHILEIRO, SUM(AD.CUSTO_BASE) AS CUSTO_BASE_TOTAL, C.ORGANIZADOR, C.CODIGO_INTERNO
        FROM PARTICIPA P JOIN CARAVANA C
        ON (P.ORGANIZADOR = C.ORGANIZADOR AND P.CODIGO_INTERNO = C.CODIGO_INTERNO) JOIN ITINERARIO I
        ON (I.ORGANIZADOR = C.ORGANIZADOR AND I.CODIGO_INTERNO = C.CODIGO_INTERNO) JOIN ADENTRA AD
        ON (I.ID = AD.ITINERARIO AND P.MOCHILEIRO = AD.USUARIO)
        GROUP BY C.ORGANIZADOR, C.CODIGO_INTERNO, P.MOCHILEIRO
        )) AS M
    GROUP BY M.MOCHILEIRO, M.ORGANIZADOR, M.CODIGO_INTERNO;    

/* 
    Contabilista os ganhos de cada especialistas por meio de dois selects aninhados em um terceiro:
    O primeiro select contabiliza os ganhos das atividades nas quais os especialistas trabalharam
    O segundo select contabiliza o custo inicial para a participação de cada itinerário
    O select exterior soma estes valores em uma tabela única para mostrar o saldo dos especialistas
 */
SELECT E.ESPECIALISTA, SUM(E.GANHOS_ATIVIDADES_TOTAIS) AS GANHOS_TOTAIS, E.ORGANIZADOR, E.CODIGO_INTERNO
    FROM ((
        SELECT AU.ESPECIALISTA, -1*(SUM(G.GASTOS_GANHOS)) AS GANHOS_ATIVIDADES_TOTAIS, C.ORGANIZADOR, C.CODIGO_INTERNO 
        FROM AUXILIA AU JOIN CARAVANA C
        ON (AU.ORGANIZADOR = C.ORGANIZADOR AND AU.CODIGO_INTERNO = C.CODIGO_INTERNO) JOIN ITINERARIO I
        ON (C.ORGANIZADOR = I.ORGANIZADOR AND C.CODIGO_INTERNO = I.CODIGO_INTERNO) JOIN ADENTRA AD
        ON (I.ID = AD.ITINERARIO) JOIN ATIVIDADE A
        ON (AD.ITINERARIO = A.ITINERARIO) JOIN GRUPO_DE_PARTICIPANTES G
        ON (A.ID = G.ATIVIDADE) JOIN ENTRA E
        ON (G.ATIVIDADE = E.ATIVIDADE AND G.CATEGORIA = E.CATEGORIA AND AU.ESPECIALISTA = E.USUARIO AND E.USUARIO = AD.USUARIO)
        GROUP BY AU.ESPECIALISTA, C.ORGANIZADOR, C.CODIGO_INTERNO
    ) 
    UNION ALL (
        SELECT AU.ESPECIALISTA, -1*SUM(AD.CUSTO_BASE) AS CUSTO_BASE_TOTAL, C.ORGANIZADOR, C.CODIGO_INTERNO
        FROM AUXILIA AU JOIN CARAVANA C
        ON (AU.ORGANIZADOR = C.ORGANIZADOR AND AU.CODIGO_INTERNO = C.CODIGO_INTERNO) JOIN ITINERARIO I
        ON (I.ORGANIZADOR = C.ORGANIZADOR AND I.CODIGO_INTERNO = C.CODIGO_INTERNO) JOIN ADENTRA AD
        ON (I.ID = AD.ITINERARIO AND AU.ESPECIALISTA = AD.USUARIO) 
        GROUP BY C.ORGANIZADOR, C.CODIGO_INTERNO, AU.ESPECIALISTA
    )) E 
    GROUP BY E.ESPECIALISTA, E.ORGANIZADOR, E.CODIGO_INTERNO;

/* 
    Contabilista o lucro do organizador por meio de três selects aninhados em um quarto:
    O primeiro select contabiliza os ganhos originados da participação dos mochileiros nas atividades
    O segundo select contabiliza os gastos com os especialistas de cada atividade
    O terceiro select soma os custos base pagos tanto por mochileiros quanto por especialistas
    O select exterior soma estes valores em uma tabela única para mostrar o lucro do organizador
 */
SELECT U.ORGANIZADOR, U.CODIGO_INTERNO, U.USUARIO, SUM(U.GANHOS_ATIVIDADES_TOTAIS) AS GANHOS_TOTAIS
    FROM ((
        SELECT P.MOCHILEIRO AS USUARIO, (SUM(G.GASTOS_GANHOS)) AS GANHOS_ATIVIDADES_TOTAIS, C.ORGANIZADOR, C.CODIGO_INTERNO 
        FROM PARTICIPA P JOIN CARAVANA C
        ON (P.ORGANIZADOR = C.ORGANIZADOR AND P.CODIGO_INTERNO = C.CODIGO_INTERNO) JOIN ITINERARIO I
        ON (C.ORGANIZADOR = I.ORGANIZADOR AND C.CODIGO_INTERNO = I.CODIGO_INTERNO) JOIN ADENTRA AD
        ON (I.ID = AD.ITINERARIO) JOIN ATIVIDADE A
        ON (AD.ITINERARIO = A.ITINERARIO) JOIN GRUPO_DE_PARTICIPANTES G
        ON (A.ID = G.ATIVIDADE) JOIN ENTRA E
        ON (G.ATIVIDADE = E.ATIVIDADE AND G.CATEGORIA = E.CATEGORIA AND P.MOCHILEIRO = E.USUARIO AND E.USUARIO = AD.USUARIO)
        GROUP BY P.MOCHILEIRO, C.ORGANIZADOR, C.CODIGO_INTERNO
        
        UNION

        SELECT AU.ESPECIALISTA AS USUARIO, (SUM(G.GASTOS_GANHOS)) AS GANHOS_ATIVIDADES_TOTAIS, C.ORGANIZADOR, C.CODIGO_INTERNO 
        FROM AUXILIA AU JOIN CARAVANA C
        ON (AU.ORGANIZADOR = C.ORGANIZADOR AND AU.CODIGO_INTERNO = C.CODIGO_INTERNO) JOIN ITINERARIO I
        ON (C.ORGANIZADOR = I.ORGANIZADOR AND C.CODIGO_INTERNO = I.CODIGO_INTERNO) JOIN ADENTRA AD
        ON (I.ID = AD.ITINERARIO) JOIN ATIVIDADE A
        ON (AD.ITINERARIO = A.ITINERARIO) JOIN GRUPO_DE_PARTICIPANTES G
        ON (A.ID = G.ATIVIDADE) JOIN ENTRA E
        ON (G.ATIVIDADE = E.ATIVIDADE AND G.CATEGORIA = E.CATEGORIA AND AU.ESPECIALISTA = E.USUARIO AND E.USUARIO = AD.USUARIO)
        GROUP BY AU.ESPECIALISTA, C.ORGANIZADOR, C.CODIGO_INTERNO

    ) UNION ALL (
        SELECT AD.USUARIO, SUM(AD.CUSTO_BASE) AS CUSTO_BASE_TOTAL, C.ORGANIZADOR, C.CODIGO_INTERNO
        FROM CARAVANA C JOIN ITINERARIO I
        ON (I.ORGANIZADOR = C.ORGANIZADOR AND I.CODIGO_INTERNO = C.CODIGO_INTERNO) JOIN ADENTRA AD
        ON (I.ID = AD.ITINERARIO)
        GROUP BY C.ORGANIZADOR, C.CODIGO_INTERNO, AD.USUARIO
    )) U 
    GROUP BY U.USUARIO, U.ORGANIZADOR, U.CODIGO_INTERNO
    ORDER BY U.ORGANIZADOR, GANHOS_TOTAIS DESC;

/* Lista as caravanas que ainda não partiram, mostrando o tempo restante para cada uma partir
    e ordenando por caravana com data de partida mais próxima */
SELECT *, AGE(C.PARTIDA, CURRENT_TIMESTAMP) 
    AS REMAINING_TIME FROM CARAVANA C 
    WHERE EXTRACT(EPOCH FROM(C.PARTIDA - CURRENT_TIMESTAMP)) > 0
    ORDER BY REMAINING_TIME ASC;

/* 
    Conta o número de mochileiros, especialistas e itinerários de cada caravana
    O primeiro select interior conta quantos mochileiros estão em cada caravana
    O segundo select interior conta quantos especialistas estão em cada caravana
    O terceiro select interior conta os itinerários disponíveis em cada caravana
    O select externo combina estas informações em uma tabela única 
*/
SELECT M.ORGANIZADOR, M.CODIGO_INTERNO, M.NO_MOCHILEIROS, B.NO_ESPECIALISTAS, I.NO_ITINERARIOS
    FROM (
        SELECT C.ORGANIZADOR, C.CODIGO_INTERNO, COUNT(*) AS NO_MOCHILEIROS FROM CARAVANA C JOIN PARTICIPA P
        ON (P.ORGANIZADOR = C.ORGANIZADOR AND P.CODIGO_INTERNO = C.CODIGO_INTERNO)
        GROUP BY C.ORGANIZADOR, C.CODIGO_INTERNO
    ) M
    JOIN (
        SELECT C.ORGANIZADOR, C.CODIGO_INTERNO, COUNT(*) AS NO_ESPECIALISTAS FROM CARAVANA C JOIN AUXILIA AU
        ON (AU.ORGANIZADOR = C.ORGANIZADOR AND AU.CODIGO_INTERNO = C.CODIGO_INTERNO)
        GROUP BY C.ORGANIZADOR, C.CODIGO_INTERNO
    ) B 
    ON (M.ORGANIZADOR = B.ORGANIZADOR AND M.CODIGO_INTERNO = B.CODIGO_INTERNO)
    JOIN (
        SELECT C.ORGANIZADOR, C.CODIGO_INTERNO, COUNT(*) AS NO_ITINERARIOS FROM CARAVANA C JOIN ITINERARIO I
        ON (I.ORGANIZADOR = C.ORGANIZADOR AND I.CODIGO_INTERNO = C.CODIGO_INTERNO)
        GROUP BY C.ORGANIZADOR, C.CODIGO_INTERNO
    ) I 
    ON (M.ORGANIZADOR = I.ORGANIZADOR AND M.CODIGO_INTERNO = I.CODIGO_INTERNO)
GROUP BY M.ORGANIZADOR, M.CODIGO_INTERNO, M.NO_MOCHILEIROS, B.NO_ESPECIALISTAS, I.NO_ITINERARIOS;

/* A partir de cada ponto turístico do banco, lista todas as atividades que passam por cada um */
SELECT P.ID AS ID_PONTO_TURISTICO, P.NOME AS NOME_PONTO_TURISTICO, A.ID AS ID_ATIVIDADE, A.NOME AS NOME_ATIVIDADE
    FROM PONTO_TURISTICO P JOIN ITINERARIO I
        ON (P.ID = I.PONTO_TURISTICO) JOIN ATIVIDADE A
        ON (I.ID = A.ITINERARIO)
        GROUP BY P.ID, P.NOME, A.ID, A.NOME
    ORDER BY P.ID;

  /* 
    Lista os usuários que participaram de todos os itinerários de alguma caravana
    Precisa usar divisão relacional pois só podem ser apresentados os usuários que
    estavam presentes em TODOS os itinerários de uma caravana qualquer
*/
SELECT AD.USUARIO, I.ORGANIZADOR, I.CODIGO_INTERNO, COUNT(I.CODIGO_INTERNO) AS TOTAL_ITINERARIOS
    FROM ADENTRA AS AD, ITINERARIO AS I
    WHERE AD.ITINERARIO = I.ID
    GROUP BY AD.USUARIO, I.ORGANIZADOR, I.CODIGO_INTERNO
    HAVING (COUNT(I.CODIGO_INTERNO) != (
        SELECT COUNT(C.CODIGO_INTERNO) FROM CARAVANA AS C
            WHERE I.ORGANIZADOR = C.ORGANIZADOR ))
    ORDER BY AD.USUARIO;